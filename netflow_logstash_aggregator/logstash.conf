input 
{
	tcp 
	{
    		port => 9000
		type => netflow
  	}
}
filter
{
	if "" in [type] and [type] == 'netflow'
	{
		kv
		{
        		allow_duplicate_values => false
        	        source => "message"
        		value_split => "="
                	field_split => ","
                	trim_value => "\" "
                	trim_key => "\t _"
		}
		mutate 
		{
			copy =>
			{
				"acklessSyn" => "acklessSynNumeric"
			}
    			convert => 
			{ 
				"packets" => "integer" 
				"bytes" => "integer" 
				"pps" => "integer" 
				"bpp" => "integer" 
				"bps" => "integer" 
				"dport" => "integer" 
				"sport" => "integer" 
				"flows" => "integer" 
				"acklessSyn" => "integer" 
				"acklessSynNumeric" => "integer" 
				"duration" => "float" 
			}
			gsub => [ "start", "\.", "" ]
			remove_field => ["message"]
  		}
		#Save the exact time for the acklessSyn Attack. Do not enable to all netflow, or some aggregations will stop working.
		if ![acklessSyn]
		{
			mutate
			{
				remove_field => ["start"]
			}
		}
		date 
		{
        		match => [ "start","UNIX_MS" ]
        		target => "@timestamp"
		}
        	geoip
  		{
        		source => "dst"
        	        target => "dst_geoip"
		}
        	geoip
  		{
        		source => "src"
        	        target => "src_geoip"
		}
		geoip 
		{
      			default_database_type => 'ASN'
      			database => '/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-filter-geoip-6.0.1-java/vendor/GeoLite2-ASN.mmdb'
      			cache_size => 5000
      			source => 'src'
      			target => 'src_asn'
    		}
		geoip 
		{
      			default_database_type => 'ASN'
      			database => '/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-filter-geoip-6.0.1-java/vendor/GeoLite2-ASN.mmdb'
      			cache_size => 5000
      			source => 'dst'
      			target => 'dst_asn'
    		}
	}
}
output
{
	#stdout
	#{
	#	codec => rubydebug
	#}
	if "" in [type] and [type] == "netflow"
	{
		elasticsearch 
		{
        		hosts => ["localhost:9200"]
        	        index => "netflow-%{+YYYY.MM.dd}"
        	}
	}
}

