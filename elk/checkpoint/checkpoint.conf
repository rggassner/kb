input
{
        tcp
        {
                port => 5001
                type => checkpoint
        }
}
filter
{
        if "" in [type] and ( [type] == "checkpoint")
	{
        	kv 
		{
        		allow_duplicate_values => false
        	        source => "message"
        	        value_split => "="
        	        field_split => " "
        	        trim_value => "\""
       	        }
       	        date 
		{
       	                match => [ "time", "UNIX"]
  			target => "@timestamp"
  			timezone => "America/Sao_Paulo"
       		}
		ruby 
		{
			    code => "
			      require 'tzinfo' # Make sure TZInfo is loaded

			      if event.get('@timestamp')
				# Get the UTC timestamp from @timestamp
				utc_time = event.get('@timestamp').time

				# Get the timezone object for America/Sao_Paulo
				# Ensure this string matches your timezone EXACTLY
				tz = TZInfo::Timezone.get('America/Sao_Paulo')

				# Convert the UTC time to the local time within that timezone
				# This gives you a TZInfo::TimeWithZone object
				local_time_with_zone = tz.to_local(utc_time)

				# Now extract the components from the local_time_with_zone object
				event.set('hour_of_day', local_time_with_zone.hour)
				event.set('day_of_week', local_time_with_zone.wday)
				event.set('day_of_name', local_time_with_zone.strftime('%A'))
			      end
			    "
		}
                mutate 
		{
                	convert => 
			{
                        	"s_port" => "integer"
                                "bytes" => "integer"
                                "time" => "integer"
                                "start_time" => "integer"
                                "client_inbound_bytes" => "integer"
                                "client_inbound_packets" => "integer"
                                "client_outbound_packets" => "integer"
                                "client_outbound_bytes" => "integer"
                                "server_inbound_bytes" => "integer"
                                "server_inbound_packets" => "integer"
                                "server_outbound_packets" => "integer"
                                "server_outbound_bytes" => "integer"
                                "suppressed_logs" => "integer"
                                "browse_time" => "integer"
                                "service" => "integer"
                                "elapsed" => "integer"
                                "log_delay" => "integer"
                                "nat_addtnl_rulenum" => "integer"
                                "nat_rulenum" => "integer"
                                "nsons" => "integer"
                                "p_dport" => "integer"
                                "packets" => "integer"
                                "pos" => "integer"
                                "proto" => "integer"
                                "xlatedport" => "integer"
                                "xlatesport" => "integer"
                        }

                }
                geoip
		{
                        source => "dst"
                        target => "dst_geoip"
                }
                geoip
		{
                        source => "src"
                        target => "src_geoip"
                }
		geoip 
		{
      			default_database_type => 'ASN'
      			database => '/opt/maxmind/output/GeoLite2-ASN.mmdb'
      			cache_size => 5000
      			source => 'src'
      			target => 'src_asn'
    		}
		geoip 
		{
      			default_database_type => 'ASN'
      			database => '/opt/maxmind/output/GeoLite2-ASN.mmdb'
      			cache_size => 5000
      			source => 'dst'
      			target => 'dst_asn'
    		}
        	translate 
		{
            		source => "[src]"
            		target => "[is_tor]"
            		dictionary_path => "/opt/netflow/dic/torexil.yml"
        	}
                mutate
                {
                        remove_field => ["message"]
                }
        }
}
output
{
        if "" in [type] and [type] == "checkpoint"
        {
                elasticsearch
                {
                        hosts => ["https://localhost:9200"]
                        index => "checkpoint-%{+YYYY}"
                        user  => "elastic"
                        password => "yourpassword"
                        ssl_verification_mode => none
                }
        }
}
