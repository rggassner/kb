input 
{
	tcp
	{
		port => 5003
		type => ldap
		codec => json
	}
}
filter
{
	if "" in [type] and [type] == "ldap"
	{
                date
                {
                        match => [ "time", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
                        target => "@timestamp"
                        timezone => "America/Sao_Paulo"
                }
                ruby
                {
                            code => "
                              require 'tzinfo' # Make sure TZInfo is loaded

                              if event.get('@timestamp')
                                # Get the UTC timestamp from @timestamp
                                utc_time = event.get('@timestamp').time

                                # Get the timezone object for America/Sao_Paulo
                                # Ensure this string matches your timezone EXACTLY
                                tz = TZInfo::Timezone.get('America/Sao_Paulo')

                                # Convert the UTC time to the local time within that timezone
                                # This gives you a TZInfo::TimeWithZone object
                                local_time_with_zone = tz.to_local(utc_time)

                                # Now extract the components from the local_time_with_zone object
                                event.set('hour_of_day', local_time_with_zone.hour)
                                event.set('day_of_week', local_time_with_zone.wday)
                                event.set('day_of_name', local_time_with_zone.strftime('%A'))
                              end
                            "
                }
                translate
                {
                        source => "[user]"
                        target => "[accountDeliveryMessage]"
                        dictionary_path => "/etc/logstash/dictionaries/accountDeliveryMessage.yml"
                }
                translate
                {
                        source => "[user]"
                        target => "[accountRestrictive]"
                        dictionary_path => "/etc/logstash/dictionaries/accountRestrictive.yml"
                }
                translate
                {
                        source => "[user]"
                        target => "[city]"
                        dictionary_path => "/etc/logstash/dictionaries/city.yml"
                }
	}

}
output
{
        if "" in [type] and [type] == "ldap"
        {
                elasticsearch
                {
                        hosts => ["https://localhost:9200"]
                        index => "ldap-%{+YYYY.MM}"
                        user  => "elastic"
                        password => "yourpasswordhere"
                        ssl_verification_mode => none
                }
        }
}
